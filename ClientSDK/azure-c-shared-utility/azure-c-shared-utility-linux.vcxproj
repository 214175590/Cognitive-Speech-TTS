<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <Import Project="azure-c-shared-utility.props" />
  <ItemGroup>
    <ClCompile Include="adapters\condition_pthreads.c" />
    <ClCompile Include="adapters\platform_stub.c" />
    <ClCompile Include="adapters\uniqueid_stub.c" />
    <ClCompile Include="adapters\audio_sys_linux.c" />
    <ClCompile Include="adapters\lock_pthreads.c" />
    <ClCompile Include="adapters\httpapi_curl.c" />
    <ClCompile Include="adapters\threadapi_pthreads.c" />
    <ClCompile Include="adapters\wsio_libwebsockets.c" />
    <ClCompile Include="src\base64.c" />
    <ClCompile Include="src\queue.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="inc\azure_c_shared_utility\base64.h" />
    <ClInclude Include="inc\azure_c_shared_utility\condition.h" />
    <ClInclude Include="inc\azure_c_shared_utility\queue.h" />
    <ClInclude Include="inc\azure_c_shared_utility\tlsio.h" />
    <ClInclude Include="inc\azure_c_shared_utility\uhttp.h" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{d4a84fc6-5c80-4a0c-9c4c-343d23fcf0b4}</ProjectGuid>
    <Keyword>Linux</Keyword>
    <RootNamespace>azure_c_shared_utility</RootNamespace>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <ApplicationType>Linux</ApplicationType>
    <ApplicationTypeRevision>1.0</ApplicationTypeRevision>
    <TargetLinuxPlatform>Generic</TargetLinuxPlatform>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup>
    <ConfigurationType>StaticLibrary</ConfigurationType>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <IncludePath>
      $HOME/projects/$(ProjectName)/inc;
      ../$(ProjectName)/inc;
      $HOME/projects/$(ProjectName)/libwebsockets;
      $HOME/projects/$(ProjectName)/libwebsockets/lib;
      libwebsockets/lib;
      libwebsockets;
      /usr/include;
      $(IncludePath)
    </IncludePath>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <DebugInformationFormat>None</DebugInformationFormat>
      <CLanguageStandard>gnu11</CLanguageStandard>
    </ClCompile>
  </ItemDefinitionGroup>
  <Target Name="APTInstall" BeforeTargets="_CopySources">
    <Execute Command="dpkg -l | (grep libcurl4-openssl-dev) || (sudo apt-get install -y libcurl4-openssl-dev &amp;&amp; sudo apt-get update)" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="dpkg -l | grep libssl-dev || sudo apt-get install -y libssl-dev" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="dpkg -l | grep libasound2-dev || sudo apt-get install -y libasound2-dev" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="dpkg -l | grep libsqlite3-dev || sudo apt-get install -y libsqlite3-dev" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="dpkg -l | grep libb64-dev || sudo apt-get install -y libb64-dev" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="dpkg -l | grep libexpat-dev || sudo apt-get install -y libexpat-dev" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="dpkg -l | grep libc++-dev || sudo apt-get install -y libc++-dev" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="dpkg -l | grep libunwind-dev || sudo apt-get install -y libunwind-dev" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="dpkg -l | grep libevent-dev || sudo apt-get install -y libevent-dev" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="dpkg -l | grep cmake || sudo apt-get install -y cmake" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="dpkg -l | grep git || sudo apt-get install -y git" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="ls $HOME/projects/$(ProjectName)/libwebsockets || git clone https://github.com/warmcat/libwebsockets.git $HOME/projects/$(ProjectName)/libwebsockets" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="ls $HOME/projects/$(ProjectName)/libwebsockets/CMakeCache.txt  || cmake  -D LWS_WITHOUT_SERVER=ON -D LWS_WITHOUT_TEST_SERVER=ON -D LWS_WITHOUT_TESTAPPS=ON $HOME/projects/$(ProjectName)/libwebsockets/CMakeLists.txt" RemoteTarget="$(RemoteTarget)" />
    <Execute Command="ls $HOME/projects/$(ProjectName)/libwebsockets/lib/libwebsockets.a || make -C $HOME/projects/$(ProjectName)/libwebsockets" RemoteTarget="$(RemoteTarget)" />
  </Target>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>